var clock = new THREE.Clock();
    var WIDTH = window.innerWidth;
    var HEIGHT = window.innerHeight;
    
    var renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(WIDTH, HEIGHT);
    renderer.setClearColor(0xDDDDDD, 1);
    document.body.appendChild(renderer.domElement);

    var scene = new THREE.Scene();


    var camera = new THREE.PerspectiveCamera(50, WIDTH / HEIGHT, 0.1, 10000);
    camera.position.z = 500;
    scene.add(camera);



        var cloader = new THREE.ColladaLoader();
        cloader.load('sofa.DAE', function ( collada ) {
            sofa=collada.scene;
            sofa.position.set(-90,-90,50);
            sofa.scale.set(1,1,1);
            sofa.updateMatrix();
            scene.add(sofa);
            }, function ( xhr ) {console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );}
        );


        var cloader2 = new THREE.ColladaLoader();
        cloader2.load('wiatrak.DAE', function (collada) {
            wiatrak = collada.scene;
            animation = collada.animations[0];
            skin = collada.skins[0];
            

            wiatrak.traverse( function ( child ) {

					if ( child instanceof THREE.SkinnedMesh ) {

						var animation = new THREE.Animation( child, child.geometry.animation );
						animation.play();

					}

				} );

            wiatrak.position.set(0, 0, 0);
            wiatrak.scale.x = wiatrak.scale.y = wiatrak.scale.z = 3;
            wiatrak.updateMatrix();
            scene.add(wiatrak);

            //var animHandler = THREE.AnimationHandler;
            
            
            //var animation = new THREE.Animation(child, child.geometry.animation);
            //animHandler.add(animation);
            //kfAnimation = new THREE.KeyFrameAnimation(animation.node, animation.name);
            //kfAnimation.timeScale = 1;
            //kfAnimation.play(true, 0);
            
            renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            var container;
            container.appendChild(renderer.domElement);
            animate();
        }, function (xhr) { console.log((xhr.loaded / xhr.total * 100) + '% loaded'); }
        );
        
        var light = new THREE.PointLight(0xFFFFFF);
        light.position.set(0, 150, 150);
        scene.add(light);
        
        function animate() {
            var t;
            var clock = new THREE.Clock();
            var delta = clock.getDelta();
            if (t > 1) t = 0;
            if (skin) {
                for (var i = 0; i < skin.morphTargetInfluences.length; i++) {
                    skin.morphTargetInfluences[i] = 0;
                }
                skin.morphTargetInfluences[Math.floor(t * 30)] = 1;
                t += delta;
            }
            requestAnimationFrame(animate);
            render();
        }
        //animate();

       

        function render() {

            renderer.render(scene, camera);
        }